{
    "docs": [
        {
            "location": "/", 
            "text": "siddhi-store-cassandra\n\n\nThe \nsiddhi-store-cassandra extension\n is an extension to \nSiddhi\n that  can be used to persist events to a Cassandra instance of the users choice.\nFind some useful links below:\n\n\n\n\nSource code\n\n\nReleases\n\n\nIssue tracker\n\n\n\n\nLatest API Docs\n\n\nLatest API Docs is \n1.0.7\n.\n\n\nPrerequisites\n\n\n\n\nA Cassandra server instance should be started and available for connection via the DataStax Java API.\n\n\n\n\nHow to use\n\n\nUsing the extension in \nWSO2 Stream Processor\n\n\n\n\n\n\nYou can use this extension in the latest \nWSO2 Stream Processor\n that is a part of \nWSO2 Analytics\n offering, with editor, debugger and simulation support. \n\n\n\n\n\n\nThis extension is shipped out-of-the-box with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component \njar\n that can be found in the \nSTREAM_PROCESSOR_HOME\n/lib\n directory.\n\n\n\n\n\n\nWhen running the product make sure to insert the DataStax Java Driver For Apache Cassandra to \nSTREAM_PROCESSOR_HOME\n/lib\n directory.\n\n\n\n\n\n\nUsing the extension as a \njava library\n\n\n\n\nThis extension can be added as a maven dependency along with other Siddhi dependencies to your project.\n\n\n\n\n     \ndependency\n\n        \ngroupId\norg.wso2.extension.siddhi.store.cassandra\n/groupId\n\n        \nartifactId\nsiddhi-store-cassandra\n/artifactId\n\n        \nversion\nx.x.x\n/version\n\n     \n/dependency\n\n\n\n\n\nSpecial notes\n\n\n\n\n\n\nIn case of using search, make sure to include the primary key of the data containing column. If the primary \nkey is not declared by the user the performance of the Siddhi search query will be reduced.\n\n\n\n\n\n\nIn case of deleting data from the store, including primary key will increase the efficiency of the Siddhi query.\nOtherwise whole entire table will be searched and then found rows will be deleted, which will effect the \nperformance of the query.\n\n\n\n\n\n\nThe same scenario applies in updating and update or insert operations.\n\n\n\n\n\n\nMake sure to build a proper Cassandra cluster with configured hosts.\n\n\n\n\n\n\nJenkins Build Status\n\n\n\n\n\n\n\n\n\n\nBranch\n\n\nBuild Status\n\n\n\n\n\n\n\n\n\n\nmaster\n\n\n\n\n\n\n\n\n\n\n\n\nFeatures\n\n\n\n\ncassandra\n \n(Store)\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\n\nHow to Contribute\n\n\n\n\n\n\nPlease report issues at \nGitHub Issue Tracker\n.\n\n\n\n\n\n\nSend your contributions as pull requests to \nmaster branch\n. \n\n\n\n\n\n\nContact us\n\n\n\n\n\n\nPost your questions with the \n\"Siddhi\"\n tag in \nStackoverflow\n. \n\n\n\n\n\n\nSiddhi developers can be contacted via the mailing lists:\n\n\nDevelopers List   : \ndev@wso2.org\n\n\nArchitecture List : \narchitecture@wso2.org\n\n\n\n\n\n\nSupport\n\n\n\n\n\n\nWe are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. \n\n\n\n\n\n\nFor more details and to take advantage of this unique opportunity contact us via \nhttp://wso2.com/support/\n.", 
            "title": "Welcome to WSO2 Siddhi Store Cassandra"
        }, 
        {
            "location": "/#siddhi-store-cassandra", 
            "text": "The  siddhi-store-cassandra extension  is an extension to  Siddhi  that  can be used to persist events to a Cassandra instance of the users choice.\nFind some useful links below:   Source code  Releases  Issue tracker", 
            "title": "siddhi-store-cassandra"
        }, 
        {
            "location": "/#latest-api-docs", 
            "text": "Latest API Docs is  1.0.7 .", 
            "title": "Latest API Docs"
        }, 
        {
            "location": "/#prerequisites", 
            "text": "A Cassandra server instance should be started and available for connection via the DataStax Java API.", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/#how-to-use", 
            "text": "Using the extension in  WSO2 Stream Processor    You can use this extension in the latest  WSO2 Stream Processor  that is a part of  WSO2 Analytics  offering, with editor, debugger and simulation support.     This extension is shipped out-of-the-box with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component  jar  that can be found in the  STREAM_PROCESSOR_HOME /lib  directory.    When running the product make sure to insert the DataStax Java Driver For Apache Cassandra to  STREAM_PROCESSOR_HOME /lib  directory.    Using the extension as a  java library   This extension can be added as a maven dependency along with other Siddhi dependencies to your project.         dependency \n         groupId org.wso2.extension.siddhi.store.cassandra /groupId \n         artifactId siddhi-store-cassandra /artifactId \n         version x.x.x /version \n      /dependency   Special notes    In case of using search, make sure to include the primary key of the data containing column. If the primary \nkey is not declared by the user the performance of the Siddhi search query will be reduced.    In case of deleting data from the store, including primary key will increase the efficiency of the Siddhi query.\nOtherwise whole entire table will be searched and then found rows will be deleted, which will effect the \nperformance of the query.    The same scenario applies in updating and update or insert operations.    Make sure to build a proper Cassandra cluster with configured hosts.", 
            "title": "How to use"
        }, 
        {
            "location": "/#jenkins-build-status", 
            "text": "Branch  Build Status      master", 
            "title": "Jenkins Build Status"
        }, 
        {
            "location": "/#features", 
            "text": "cassandra   (Store) This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.", 
            "title": "Features"
        }, 
        {
            "location": "/#how-to-contribute", 
            "text": "Please report issues at  GitHub Issue Tracker .    Send your contributions as pull requests to  master branch .", 
            "title": "How to Contribute"
        }, 
        {
            "location": "/#contact-us", 
            "text": "Post your questions with the  \"Siddhi\"  tag in  Stackoverflow .     Siddhi developers can be contacted via the mailing lists:  Developers List   :  dev@wso2.org  Architecture List :  architecture@wso2.org", 
            "title": "Contact us"
        }, 
        {
            "location": "/#support", 
            "text": "We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology.     For more details and to take advantage of this unique opportunity contact us via  http://wso2.com/support/ .", 
            "title": "Support"
        }, 
        {
            "location": "/api/1.0.7/", 
            "text": "API Docs - v1.0.7\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \ncassandraTestTable\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "1.0.7"
        }, 
        {
            "location": "/api/1.0.7/#api-docs-v107", 
            "text": "", 
            "title": "API Docs - v1.0.7"
        }, 
        {
            "location": "/api/1.0.7/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.7/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         cassandraTestTable \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }, 
        {
            "location": "/api/1.0.6/", 
            "text": "API Docs - v1.0.6\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \ncassandraTestTable\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "1.0.6"
        }, 
        {
            "location": "/api/1.0.6/#api-docs-v106", 
            "text": "", 
            "title": "API Docs - v1.0.6"
        }, 
        {
            "location": "/api/1.0.6/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.6/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         cassandraTestTable \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }, 
        {
            "location": "/api/1.0.5/", 
            "text": "API Docs - v1.0.5\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \ncassandraTestTable\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "1.0.5"
        }, 
        {
            "location": "/api/1.0.5/#api-docs-v105", 
            "text": "", 
            "title": "API Docs - v1.0.5"
        }, 
        {
            "location": "/api/1.0.5/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.5/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         cassandraTestTable \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }, 
        {
            "location": "/api/1.0.4/", 
            "text": "API Docs - v1.0.4\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \ncassandraTestTable\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "1.0.4"
        }, 
        {
            "location": "/api/1.0.4/#api-docs-v104", 
            "text": "", 
            "title": "API Docs - v1.0.4"
        }, 
        {
            "location": "/api/1.0.4/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.4/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         cassandraTestTable \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }, 
        {
            "location": "/api/1.0.3/", 
            "text": "API Docs - v1.0.3\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \ncassandraTestTable\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "1.0.3"
        }, 
        {
            "location": "/api/1.0.3/#api-docs-v103", 
            "text": "", 
            "title": "API Docs - v1.0.3"
        }, 
        {
            "location": "/api/1.0.3/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.3/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         cassandraTestTable \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }, 
        {
            "location": "/api/1.0.2/", 
            "text": "API Docs - v1.0.2\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port will be taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \n'cassandraTestTable'\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "1.0.2"
        }, 
        {
            "location": "/api/1.0.2/#api-docs-v102", 
            "text": "", 
            "title": "API Docs - v1.0.2"
        }, 
        {
            "location": "/api/1.0.2/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.2/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port will be taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         'cassandraTestTable' \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }, 
        {
            "location": "/api/1.0.1/", 
            "text": "API Docs - v1.0.1\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port will be taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \n'cassandraTestTable'\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "1.0.1"
        }, 
        {
            "location": "/api/1.0.1/#api-docs-v101", 
            "text": "", 
            "title": "API Docs - v1.0.1"
        }, 
        {
            "location": "/api/1.0.1/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.1/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port will be taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         'cassandraTestTable' \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }, 
        {
            "location": "/api/1.0.0/", 
            "text": "API Docs - v1.0.0\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port will be taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \n'cassandraTestTable'\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n with a column family \nStockCF\n on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "1.0.0"
        }, 
        {
            "location": "/api/1.0.0/#api-docs-v100", 
            "text": "", 
            "title": "API Docs - v1.0.0"
        }, 
        {
            "location": "/api/1.0.0/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/1.0.0/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port will be taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         'cassandraTestTable' \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  with a column family  StockCF  on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }, 
        {
            "location": "/api/latest/", 
            "text": "API Docs - v1.0.7\n\n\nStore\n\n\ncassandra \n(Store)\n\n\nThis extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.\n\n\n\nSyntax\n\n\n@Store(type=\ncassandra\n, cassandra.host=\nSTRING\n, column.family=\nSTRING\n, client.port=\nSTRING\n, keyspace=\nSTRING\n, username=\nSTRING\n, password=\nSTRING\n)\n@PrimaryKey(\nPRIMARY_KEY\n)\n@Index(\nINDEX\n)\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \ncassandra.host\n\n        \nHost that is used to get connected in to the cassandra keyspace.\n\n        \nlocalhost\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncolumn.family\n\n        \nThe name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table.\n\n        \nThe table name defined in the Siddhi Application query.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nclient.port\n\n        \nClient port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken.\n\n        \n9042\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nkeyspace\n\n        \nUser need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter.\n\n        \ncassandraTestTable\n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nusername\n\n        \nThrough user name user can specify the relevent username that is used to log in to the cassandra keyspace .\n\n        \nThe username of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nThrough password user can specify the relevent password that is used to log in to the cassandra keyspace .\n\n        \nThe password of the keyspace\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long); \n\n\n\n\nThis definition creates an event table named \nStockTable\n in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named \nsymbol\n, \nprice\n, and \nvolume\n of the \nstring\n, \nfloat\n and \nlong\n types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The \nsymbol\n attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "latest"
        }, 
        {
            "location": "/api/latest/#api-docs-v107", 
            "text": "", 
            "title": "API Docs - v1.0.7"
        }, 
        {
            "location": "/api/latest/#store", 
            "text": "", 
            "title": "Store"
        }, 
        {
            "location": "/api/latest/#cassandra-store", 
            "text": "This extension assigns data sources and connection instructions to event tables. It also implements read-write operations on connected datasource.  Syntax  @Store(type= cassandra , cassandra.host= STRING , column.family= STRING , client.port= STRING , keyspace= STRING , username= STRING , password= STRING )\n@PrimaryKey( PRIMARY_KEY )\n@Index( INDEX )  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         cassandra.host \n         Host that is used to get connected in to the cassandra keyspace. \n         localhost \n         STRING \n         No \n         No \n     \n     \n         column.family \n         The name with which the event table should be persisted in the store. If no name is specified via this parameter, the event table is persisted with the same name as the Siddhi table. \n         The table name defined in the Siddhi Application query. \n         STRING \n         Yes \n         No \n     \n     \n         client.port \n         Client port that is used to get connected with the client store. If no name is specified via this parameter, the default port is taken. \n         9042 \n         STRING \n         Yes \n         No \n     \n     \n         keyspace \n         User need to give the keyspace that the data is persisted. Keyspace name is specified via this parameter. \n         cassandraTestTable \n         STRING \n         No \n         No \n     \n     \n         username \n         Through user name user can specify the relevent username that is used to log in to the cassandra keyspace . \n         The username of the keyspace \n         STRING \n         Yes \n         No \n     \n     \n         password \n         Through password user can specify the relevent password that is used to log in to the cassandra keyspace . \n         The password of the keyspace \n         STRING \n         Yes \n         No \n       Examples  EXAMPLE 1  define stream StockStream (symbol string, price float, volume long); \n@Store(type='cassandra', column.family='StockTable',keyspace='AnalyticsFamily',username='cassandra',password='cassandra',cassandra.host='localhost')@IndexBy('volume')@PrimaryKey('symbol')define table StockTable (symbol string, price float, volume long);   This definition creates an event table named  StockTable  in the AnalyticsFamily keyspace on the Cassandra instance if it does not already exist (with 3 attributes named  symbol ,  price , and  volume  of the  string ,  float  and  long  types respectively). The connection is made as specified by the parameters configured for the '@Store' annotation. The  symbol  attribute is considered a unique field, and the values for this attribute are the Cassandra row IDs.", 
            "title": "cassandra (Store)"
        }
    ]
}